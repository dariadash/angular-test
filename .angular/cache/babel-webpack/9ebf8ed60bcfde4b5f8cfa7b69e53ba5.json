{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { ViewChild } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { AppService } from './app.service';\nlet AppComponent = class AppComponent {\n  constructor(serv, router) {\n    this.serv = serv;\n    this.router = router;\n    this.editedUser = null;\n    this.users = [];\n    this.userItem = null;\n    this.isNewRecord = false;\n    this.statusMessage = \"\";\n    this.resources = [];\n    this.users = new Array();\n    this.resources = new Array();\n  }\n\n  ngOnInit() {\n    this.loadUsers();\n    this.getResources();\n  }\n\n  goToUser(userItem) {\n    this.router.navigate(['/users'], {\n      queryParams: {\n        'id': userItem.id\n      }\n    });\n  } //загрузка ресурсов\n\n\n  getResources() {\n    this.serv.getResources().subscribe(data => {\n      this.resources = data;\n    });\n  } //загрузка пользователей\n\n\n  loadUsers() {\n    this.serv.getUsers().subscribe(data => {\n      this.users = data;\n    });\n  } // добавление пользователя\n  // addUser() {\n  //     this.editedUser = new User(0, \"\", \"\", \"\", \"\");\n  //     this.users.push(this.editedUser);\n  //     this.isNewRecord = true;\n  // }\n  // удаление пользователя\n\n\n  deleteUser(user) {\n    this.serv.deleteUser(user.id).subscribe(data => {\n      this.statusMessage = 'Данные успешно удалены', this.loadUsers();\n    });\n  }\n\n};\n\n__decorate([ViewChild('readOnlyTemplate', {\n  static: false\n})], AppComponent.prototype, \"readOnlyTemplate\", void 0);\n\n__decorate([ViewChild('editTemplate', {\n  static: false\n})], AppComponent.prototype, \"editTemplate\", void 0);\n\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  providers: [AppService]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}