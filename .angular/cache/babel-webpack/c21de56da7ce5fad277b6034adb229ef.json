{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from '@angular/core';\nlet UserComponent = class UserComponent {\n  constructor(router) {\n    this.router = router;\n    this.userItem = null;\n  }\n\n  goToItem(myItem) {\n    this.router.navigate(['/user', myItem.id], {\n      queryParams: {\n        'is': myItem.id\n      }\n    });\n  }\n\n};\nUserComponent = __decorate([Component({\n  selector: 'user-app',\n  templateUrl: './user.component.html'\n})], UserComponent);\nexport { UserComponent }; // export class ItemComponent{ \n//     id: any;\n//     product: any;\n//     price: any;\n//     private routeSubscription: Subscription;\n//     private querySubscription: Subscription;\n//     constructor(private route: ActivatedRoute){\n//         this.routeSubscription = route.params.subscribe(params=>this.id=params['id']);\n//         this.querySubscription = route.queryParams.subscribe(\n//             (queryParam: any) => {\n//                 this.product = queryParam['product'];\n//                 this.price = queryParam['price'];\n//             }\n//         );\n//     }\n// }","map":null,"metadata":{},"sourceType":"module"}